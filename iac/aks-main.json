{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "3508976555249652580"
    }
  },
  "parameters": {
    "tags": {
      "type": "object"
    },
    "location": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "aksSystemSubnetId": {
      "type": "string"
    },
    "aksUserSubnetId": {
      "type": "string"
    },
    "aksAdminGroupObjectId": {
      "type": "string"
    },
    "aksVersion": {
      "type": "string"
    },
    "azMonitorWorkspaceId": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "module-aks",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "aksVersion": {
            "value": "[parameters('aksVersion')]"
          },
          "zones": {
            "value": []
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "addOns": {
            "value": {}
          },
          "enablePrivateCluster": {
            "value": false
          },
          "aksSystemSubnetId": {
            "value": "[parameters('aksSystemSubnetId')]"
          },
          "aksUserSubnetId": {
            "value": "[parameters('aksUserSubnetId')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[parameters('azMonitorWorkspaceId')]"
          },
          "adminGroupObjectID": {
            "value": "[parameters('aksAdminGroupObjectId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "11606875579289730438"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "aksDnsPrefix": {
              "type": "string",
              "defaultValue": "aks",
              "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
              }
            },
            "zones": {
              "type": "array",
              "defaultValue": []
            },
            "aksAgentOsDiskSizeGB": {
              "type": "int",
              "defaultValue": 30,
              "maxValue": 1023,
              "minValue": 30,
              "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 30 to 1023."
              }
            },
            "maxPods": {
              "type": "int",
              "defaultValue": 30,
              "maxValue": 250,
              "minValue": 10
            },
            "networkPlugin": {
              "type": "string",
              "defaultValue": "azure",
              "allowedValues": [
                "azure",
                "kubenet"
              ]
            },
            "aksNodeCount": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 100,
              "minValue": 1,
              "metadata": {
                "description": "The default number of agent nodes for the cluster."
              }
            },
            "aksMinNodeCount": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The minimum number of agent nodes for the cluster."
              },
              "maxValue": 100,
              "minValue": 1
            },
            "aksMaxNodeCount": {
              "type": "int",
              "defaultValue": 10,
              "metadata": {
                "description": "The minimum number of agent nodes for the cluster."
              },
              "maxValue": 100,
              "minValue": 1
            },
            "aksNodeVMSize": {
              "type": "string",
              "defaultValue": "Standard_D4s_v3",
              "metadata": {
                "description": "The size of the Virtual Machine."
              }
            },
            "aksVersion": {
              "type": "string",
              "metadata": {
                "description": "The version of Kubernetes."
              }
            },
            "aksServiceCIDR": {
              "type": "string",
              "defaultValue": "10.100.0.0/16",
              "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
              }
            },
            "aksDnsServiceIP": {
              "type": "string",
              "defaultValue": "10.100.0.10",
              "metadata": {
                "description": "Containers DNS server IP address."
              }
            },
            "aksDockerBridgeCIDR": {
              "type": "string",
              "defaultValue": "172.17.0.1/16",
              "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
              }
            },
            "aksEnableRBAC": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable RBAC on the AKS cluster."
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "enableAutoScaling": {
              "type": "bool",
              "defaultValue": true
            },
            "aksSystemSubnetId": {
              "type": "string"
            },
            "aksUserSubnetId": {
              "type": "string"
            },
            "adminGroupObjectID": {
              "type": "string"
            },
            "addOns": {
              "type": "object"
            },
            "tags": {
              "type": "object"
            },
            "enablePodSecurityPolicy": {
              "type": "bool",
              "defaultValue": false
            },
            "enablePrivateCluster": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "suffix": "[uniqueString(resourceGroup().id)]",
            "aksClusterName": "[format('aks-{0}', variables('suffix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2022-08-03-preview",
              "name": "[variables('aksClusterName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "kubernetesVersion": "[parameters('aksVersion')]",
                "enableRBAC": "[parameters('aksEnableRBAC')]",
                "enablePodSecurityPolicy": "[parameters('enablePodSecurityPolicy')]",
                "dnsPrefix": "[parameters('aksDnsPrefix')]",
                "addonProfiles": "[parameters('addOns')]",
                "apiServerAccessProfile": {
                  "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "agentPoolProfiles": [
                  {
                    "name": "system",
                    "mode": "System",
                    "availabilityZones": "[parameters('zones')]",
                    "count": 1,
                    "enableAutoScaling": true,
                    "minCount": "[parameters('aksMinNodeCount')]",
                    "maxCount": "[parameters('aksMaxNodeCount')]",
                    "maxPods": "[parameters('maxPods')]",
                    "osDiskSizeGB": "[parameters('aksAgentOsDiskSizeGB')]",
                    "osType": "Linux",
                    "type": "VirtualMachineScaleSets",
                    "vnetSubnetID": "[parameters('aksSystemSubnetId')]",
                    "tags": "[parameters('tags')]",
                    "vmSize": "[parameters('aksNodeVMSize')]",
                    "osDiskType": "Ephemeral"
                  },
                  {
                    "name": "linux",
                    "mode": "User",
                    "availabilityZones": "[parameters('zones')]",
                    "osDiskSizeGB": "[parameters('aksAgentOsDiskSizeGB')]",
                    "count": "[parameters('aksNodeCount')]",
                    "minCount": "[parameters('aksMinNodeCount')]",
                    "maxCount": "[parameters('aksMaxNodeCount')]",
                    "vmSize": "[parameters('aksNodeVMSize')]",
                    "osType": "Linux",
                    "osDiskType": "Ephemeral",
                    "type": "VirtualMachineScaleSets",
                    "vnetSubnetID": "[parameters('aksUserSubnetId')]",
                    "enableAutoScaling": "[parameters('enableAutoScaling')]",
                    "maxPods": "[parameters('maxPods')]",
                    "tags": "[parameters('tags')]"
                  }
                ],
                "networkProfile": {
                  "networkPlugin": "[parameters('networkPlugin')]",
                  "serviceCidr": "[parameters('aksServiceCIDR')]",
                  "dnsServiceIP": "[parameters('aksDnsServiceIP')]",
                  "dockerBridgeCidr": "[parameters('aksDockerBridgeCIDR')]",
                  "loadBalancerSku": "standard"
                },
                "aadProfile": {
                  "managed": true,
                  "enableAzureRBAC": true,
                  "tenantID": "[subscription().tenantId]",
                  "adminGroupObjectIDs": [
                    "[parameters('adminGroupObjectID')]"
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', variables('aksClusterName'))]",
              "name": "aksDiagnosticSettings",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "kube-apiserver",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  },
                  {
                    "category": "kube-audit",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  },
                  {
                    "category": "kube-audit-admin",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  },
                  {
                    "category": "kube-controller-manager",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  },
                  {
                    "category": "kube-scheduler",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  },
                  {
                    "category": "cluster-autoscaler",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  },
                  {
                    "category": "guard",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "retentionPolicy": {
                      "days": 7,
                      "enabled": true
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))]"
              ]
            }
          ],
          "outputs": {
            "aksFqdn": {
              "type": "string",
              "value": "[if(parameters('enablePrivateCluster'), reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))).privateFQDN, reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))).fqdn)]"
            },
            "aksClusterName": {
              "type": "string",
              "value": "[variables('aksClusterName')]"
            },
            "aksKubeletIdentityObjectId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))).identityProfile.kubeletIdentity.objectId]"
            },
            "aksResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))]"
            },
            "aksClusterManagedIdentity": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName')), '2022-08-03-preview', 'full').identity.principalId]"
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "clusterName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'module-aks')).outputs.aksClusterName.value]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'module-aks')).outputs.resourceGroupName.value]"
    }
  }
}