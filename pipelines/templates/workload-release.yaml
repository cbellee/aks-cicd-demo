# workload-release.yaml

parameters:
  - name: vmImage
    default: 'ubuntu-latest'
    type: string
  - name: poolName
    default: 'Azure Pipelines'
    type: string
  - name: location
    default: 'australiaeast'
    type: string
  - name: azureServiceConnection
    type: string
  - name: subscriptionId
    type: string
  - name: gitRepoUrl
    type: string

stages:
- stage: dev
  condition: succeededOrFailed()
  jobs:
  - deployment: 
    displayName: 'Dev workload deployment'
    pool:
      name: ${{parameters.poolName}}
    environment: aks-cicd-demo-dev
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'drop'
                targetPath: $(System.ArtifactsDirectory)
            - task: AzurePowerShell@5
              displayName: 'Get subscription deployment outputs'
              inputs:
                azureSubscription: ${{parameters.azureServiceConnection}}
                azurePowerShellVersion: LatestVersion
                ScriptType: InlineScript
                pwsh: true
                Inline: |
                  $deployment = Get-AzSubscriptionDeployment -Name 'aks-cicd-demo-aks-deployment-dev'
                  Write-Host "##vso[task.setvariable variable=resourceGroupName;]$($deployment.Outputs.resourceGroupName.value)"
                  Write-Host "##vso[task.setvariable variable=clusterName;]$($deployment.Outputs.clusterName.value)"
                  Write-Host
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Validate Templates'
              enabled: true
              inputs:
                deploymentScope: Subscription
                azureResourceManagerConnection: ${{parameters.azureServiceConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/iac/workload-main.bicep'
                overrideParameters: '-environment dev -resourceGroupName $(resourceGroupName) -clusterName $(clusterName) -gitRepoUrl $(gitRepoUrl)'
                deploymentMode: Validation
                deploymentName: 'aks-cicd-demo-workload-validation-dev'
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Deploy Templates'
              inputs:
                deploymentScope: Subscription
                azureResourceManagerConnection: ${{parameters.azureServiceConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/iac/workload-main.bicep'
                overrideParameters: '-environment dev -resourceGroupName $(resourceGroupName) -clusterName $(clusterName) -gitRepoUrl $(gitRepoUrl)'
                deploymentMode: Incremental
                deploymentName: 'aks-cicd-demo-workload-deployment-dev'
- stage: test
  condition: succeededOrFailed()
  jobs:
  - deployment: 
    displayName: 'Test workload deployment'
    pool:
      name: ${{parameters.poolName}}
    environment: aks-cicd-demo-test
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'drop'
                targetPath: $(System.ArtifactsDirectory)
            - task: AzurePowerShell@5
              displayName: 'Get subscription deployment outputs'
              inputs:
                azureSubscription: ${{parameters.azureServiceConnection}}
                azurePowerShellVersion: LatestVersion
                ScriptType: InlineScript
                pwsh: true
                Inline: |
                  $deployment = Get-AzSubscriptionDeployment -Name 'aks-cicd-demo-aks-deployment-test'
                  Write-Host "##vso[task.setvariable variable=resourceGroupName;]$($deployment.Outputs.resourceGroupName.value)"
                  Write-Host "##vso[task.setvariable variable=clusterName;]$($deployment.Outputs.clusterName.value)"
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Validate Templates'
              inputs:
                deploymentScope: Subscription
                azureResourceManagerConnection: ${{parameters.azureServiceConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/iac/workload-main.bicep'
                overrideParameters: '-environment test -resourceGroupName $(resourceGroupName) -clusterName $(clusterName) -gitRepoUrl $(gitRepoUrl)'
                deploymentMode: Validation
                deploymentName: 'aks-cicd-demo-workload-validation-test'
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Deploy Templates'
              inputs:
                deploymentScope: Subscription
                azureResourceManagerConnection: ${{parameters.azureServiceConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/iac/workload-main.bicep'
                overrideParameters: '-environment test -resourceGroupName $(resourceGroupName) -clusterName $(clusterName) -gitRepoUrl $(gitRepoUrl)'
                deploymentMode: Incremental
                deploymentName: 'aks-cicd-demo-workload-deployment-test'
- stage: prod
  condition: succeededOrFailed()
  jobs:
  - deployment: 
    displayName: 'Prod workload deployment'
    pool:
      name: ${{parameters.poolName}}
    environment: aks-cicd-demo-prod
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'drop'
                targetPath: $(System.ArtifactsDirectory)
            - task: AzurePowerShell@5
              displayName: 'Get subscription deployment outputs'
              inputs:
                azureSubscription: ${{parameters.azureServiceConnection}}
                azurePowerShellVersion: LatestVersion
                ScriptType: InlineScript
                pwsh: true
                Inline: |
                  $deployment = Get-AzSubscriptionDeployment -Name 'aks-cicd-demo-aks-deployment-prod'
                  Write-Host "##vso[task.setvariable variable=resourceGroupName;]$($deployment.Outputs.resourceGroupName.value)"
                  Write-Host "##vso[task.setvariable variable=clusterName;]$($deployment.Outputs.clusterName.value)"
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Validate Templates'
              inputs:
                deploymentScope: Subscription
                azureResourceManagerConnection: ${{parameters.azureServiceConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/iac/workload-main.bicep'
                overrideParameters: '-environment prod -resourceGroupName $(resourceGroupName) -clusterName $(clusterName) -gitRepoUrl $(gitRepoUrl)'
                deploymentMode: Validation
                deploymentName: 'aks-cicd-demo-workload-validation-prod'
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'Deploy Templates'
              inputs:
                deploymentScope: Subscription
                azureResourceManagerConnection: ${{parameters.azureServiceConnection}}
                subscriptionId: ${{parameters.subscriptionId}}
                location: ${{parameters.location}}
                csmFile: '$(System.ArtifactsDirectory)/iac/workload-main.bicep'
                overrideParameters: '-environment prod -resourceGroupName $(resourceGroupName) -clusterName $(clusterName) -gitRepoUrl $(gitRepoUrl)'
                deploymentMode: Incremental
                deploymentName: 'aks-cicd-demo-workload-deployment-prod'