name: 'Workload Deployment'
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Infrastructure Deployment"]
    types:
      - completed
permissions:
      id-token: write
      contents: read
env:
  location: 'australiaeast'
  subscriptionId: 'b2375b5f-8dab-4436-b87c-32bc7fdce5d0'
  gitRepoUrl: 'https://github.com/cbellee/aks-cicd-demo'
jobs:
  lint-deployment-files:
    name: 'Lint Bicep deployment files'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Lint Bicep Files'
        run: |
          bicep build ./iac/modules/flux-extension.bicep
          bicep build ./iac/workload.bicep
  get-deployment:
    name: 'Get Deployment Output'
    runs-on: ubuntu-latest
    needs: lint-deployment-files
    outputs:
      devResourceGroupName: ${{ steps.deployment-output.outputs.devResourceGroupName }}
      testResourceGroupName: ${{ steps.deployment-output.outputs.testResourceGroupName }}
      prodResourceGroupName: ${{ steps.deployment-output.outputs.prodResourceGroupName }}
      devClusterName: ${{ steps.deployment-output.outputs.devClusterName }}
      testClusterName: ${{ steps.deployment-output.outputs.testClusterName }}
      prodClusterName: ${{ steps.deployment-output.outputs.prodClusterName }}
      devAcrName: ${{ steps.deployment-output.outputs.devAcrName }}
      testAcrName: ${{ steps.deployment-output.outputs.testAcrName }}
      prodAcrName: ${{ steps.deployment-output.outputs.prodAcrName }}
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Get Deployment Output'
        id: deployment-output
        run: |
          echo "devResourceGroupName=$(az deployment sub show \
            --name dev-infra-deployment \
            --query properties.outputs.workloadResourceGroupName.value)" >> $GITHUB_OUTPUT

          echo "testResourceGroupName=$(az deployment sub show \
            --name test-infra-deployment \
            --query properties.outputs.workloadResourceGroupName.value)" >> $GITHUB_OUTPUT

          echo "prodResourceGroupName=$(az deployment sub show \
            --name prod-infra-deployment \
            --query properties.outputs.workloadResourceGroupName.value)" >> $GITHUB_OUTPUT

          echo "devClusterName=$(az deployment sub show \
            --name dev-infra-deployment \
            --query properties.outputs.aksClusterName.value)" >> $GITHUB_OUTPUT

          echo "testClusterName=$(az deployment sub show \
            --name test-infra-deployment \
            --query properties.outputs.aksClusterName.value)" >> $GITHUB_OUTPUT

          echo "prodClusterName=$(az deployment sub show \
            --name prod-infra-deployment \
            --query properties.outputs.aksClusterName.value)" >> $GITHUB_OUTPUT
          
          echo "devAcrName=$(az deployment sub show \
            --name dev-infra-deployment \
            --query properties.outputs.acrName.value)" >> $GITHUB_OUTPUT

          echo "testAcrName=$(az deployment sub show \
            --name test-infra-deployment \
            --query properties.outputs.acrName.value)" >> $GITHUB_OUTPUT

          echo "prodAcrName=$(az deployment sub show \
            --name prod-infra-deployment \
            --query properties.outputs.acrName.value)" >> $GITHUB_OUTPUT
  dev-workload-deployment:
    name: 'Apply Dev Workload'
    runs-on: ubuntu-latest
    needs: [lint-deployment-files, get-deployment]
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: azure/arm-deploy@v1
        name: 'Apply Dev Workload'
        with: 
          scope: resourcegroup
          subscriptionId: ${{ env.subscriptionId }}
          region: ${{ env.location }}
          template: ./iac/workload.bicep
          resourceGroupName: ${{ needs.get-deployment.outputs.devResourceGroupName }}
          deploymentMode: Incremental
          deploymentName: dev-workload-deployment
          parameters: 
            clusterName=${{ needs.get-deployment.outputs.devClusterName }}
            environment=dev
            gitRepoUrl=${{ env.gitRepoUrl }}
  test-workload-deployment:
    name: 'Apply Test Workload'
    runs-on: ubuntu-latest
    needs: [lint-deployment-files, get-deployment, dev-workload-deployment]
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: azure/arm-deploy@v1
        name: 'Deploy Test Workload'
        with: 
          scope: resourcegroup
          subscriptionId: ${{ env.subscriptionId }}
          region: ${{ env.location }}
          template: ./iac/workload.bicep
          resourceGroupName: ${{ needs.get-deployment.outputs.testResourceGroupName }}
          deploymentMode: Incremental
          deploymentName: test-workload-deployment
          parameters: 
            clusterName=${{ needs.get-deployment.outputs.testClusterName }}
            environment=test
            gitRepoUrl=${{ env.gitRepoUrl }}
  prod-workload-deployment:
    name: 'Apply Prod Workload'
    runs-on: ubuntu-latest
    needs: [lint-deployment-files, get-deployment, test-workload-deployment]
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: azure/arm-deploy@v1
        name: 'Deploy Prod Workload'
        with: 
          scope: resourcegroup
          subscriptionId: ${{ env.subscriptionId }}
          region: ${{ env.location }}
          template: ./iac/workload.bicep
          resourceGroupName: ${{ needs.get-deployment.outputs.prodResourceGroupName }}
          deploymentMode: Incremental
          deploymentName: prod-workload-deployment
          parameters: 
            clusterName=${{ needs.get-deployment.outputs.prodClusterName }}
            environment=prod
            gitRepoUrl=${{ env.gitRepoUrl }}